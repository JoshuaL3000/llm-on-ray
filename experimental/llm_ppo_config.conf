# I am python, not json
{
    "run_mode" : "standalone",
    "seed": 42,
    # "torch_thread_num": 140,
    "logging_config_file": "./logging.conf",
    "logger_name": "custom",
    
    "agentenv": {
        "type": "RLHFEnv",
        "config": {
            "tokenizer": {
                "type": "HuggingFaceTokenizer",
                "name": "EleutherAI/gpt2",
                "config": {}
            },
            "reward_model": {
                "type": "HuggingFaceRewardModel",
                "name": "EleutherAI/gpt2",
                "config": {}
            },
            "sft_model": {
                "type": "HuggingFaceModelForCausalLM",
                "name": "EleutherAI/gpt2",
                "config": {}
            },
            "datasets": {
                "type": "HuggingfaceDataset",
                "name": "Dahoas/rm-static",
                
                "load_from_disk": True,
                "load_config" : {
                    "split": "train"
                }
            },
            "kl_coeff": 0.2,
            "max_generation_length": 50,
            "model_max_length": 1024
        }
    },
    "rl_module": {
        "actor_base_model": "EleutherAI/gpt2",
        "critic_base_model": "EleutherAI/gpt2",
    },
    "training": {
        "num_sgd_iter": 1,
        "sgd_minibatch_size": 2, # minibatch size for each SGD iteration
        "train_batch_size": 2, # number of on-policy samples to collect
        "_enable_learner_api": True,
        
    },
    "rollouts": {
        "num_rollout_workers": 0,
    },
    "evaluation":{
        "evaluation_interval": 1,
        "evaluation_duration_unit": "episodes",
    },
    "experimental":{
        "_disable_preprocessor_api": True,
        "_disable_initialize_loss_from_dummy_batch": True,
    },
    "run_config":{
        "checkpoint": {
            "checkpoint_frequency": 50,
            "checkpoint_at_end": True,
        },
        "stop": {
            "training_iteration": 1000
        }
    },
    "ray_config": {
        "init": {
            "runtime_env": {
                "env_vars": {
                    "OMP_NUM_THREADS": "140", 
                    "ACCELERATE_USE_CPU": "True", 
                    "ACCELERATE_USE_FSDP": "true",  # FSDP setting
                    "FSDP_SHARDING_STRATEGY": "1", 
                    "FSDP_OFFLOAD_PARAMS": "false", 
                    "FSDP_MIN_NUM_PARAMS": "1000000", 
                    "FSDP_AUTO_WRAP_POLICY": "SIZE_BASED_WRAP", 
                    "FSDP_BACKWARD_PREFETCH": "BACKWARD_PRE", 
                    "FSDP_STATE_DICT_TYPE": "SHARDED_STATE_DICT", 
                    "ACCELERATE_MIXED_PRECISION": "no",
                    "CCL_WORKER_COUNT": "1",        # CCL setting
                    "CCL_LOG_LEVEL": "info",
                    "WORLD_SIZE": "2",    # Enable multi-process
                    #"FI_PROVIDER": "tcp",         # Network setting
                    #"FI_PROVIDER": "psm3",         # Network setting
                    "FI_TCP_IFACE": "eib0",
                    "LD_LIBRARY_PATH": "/usr/local/ofed/mlnx-5.9-0.5.6.0_372.32.1.3_2.12.9/lib64:/usr/local/ofed/mlnx-5.9-0.5.6.0_372.32.1.3_2.12.9/lib64/libibverbs",
                    "KMP_AFFINITY": "granularity=fine,compact",
                    #"FI_TCP_IFACE": "lo",
                    #"FI_TCP_IFACE": "eth0",
                    #"JAVA_HOME": os.getenv("JAVA_HOME"),
                    #"CLASSPATH": os.getenv("CLASSPATH"),
                    #"ARROW_LIBHDFS_DIR": os.getenv("ARROW_LIBHDFS_DIR"),
                    #"RAY_PDB" : "0"
                }
            },
            "local_mode": True,
        },
    }
}
